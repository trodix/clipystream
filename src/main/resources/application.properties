# ===============================
# = GENERAL
# ===============================
spring.profiles.active=dev

server.port = 8000

# Remove stack traces field in error response
server.error.include-stacktrace = NEVER

spring.servlet.multipart.resolve-lazily=true

logging.config = classpath:log4j2.xml

# ===============================
# = JPA / HIBERNATE
# ===============================

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).

# Show or not log for each sql query
spring.jpa.show-sql = false

# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
spring.jpa.hibernate.ddl-auto = update

# Naming strategy
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# ===============================
# = JWT
# ===============================

app.jwt-secret = 2c2296b84dbf8f025c670c66d46867a5

# 10 min
app.jwt-expiration-sec = 600

# ===============================
# = Default admin credentials
# ===============================
app.default-user.username = admin
app.default-user.email = admin@example.com
app.default-user.roles = admin

# ===============================
# = APP
# ===============================

app.storage.allowed-file-extentions=gif,webm,mp4

# Both values need to be changed because max-file-size is limited by max-request-size
spring.servlet.multipart.max-request-size=20MB
spring.servlet.multipart.max-file-size=20MB

# File upload size quota per day
app.storage.max-quota-per-day-mb=60

# ===============================
# = BUCKET
# ===============================

# Bucket storage implementation
app.storage.provider.class=

# S3 complient bucket storage config
app.storage.provider.s3.secret-key=${S3_BUCKET_PROVIDER_SECRET_KEY:}
app.storage.provider.s3.access-key=
app.storage.provider.s3.region=
app.storage.provider.s3.endpoint-bucket-url=
app.storage.provider.s3.bucket-name=
